jasypt:
  encryptor:
    bean: jasyptStringEncryptor
    password: ${JASYPT_PASSWORD}

spring:
  application:
    name: pay
  datasource:
    url: ENC(ox20N75lSmaNhUxP9nnl4eDu/0tc+rQ+jyFleqX96Qh8nKQ1LXnFSPcl5/dVKIBSEGPpk5Bx3iiASOZm1VvjMVoyG9djG04MxlUWNWLcWIU=)
    username: ENC(XhGT41xwg0J9hSXkV9tPjQ==)
    password: ENC(cOWaniGDoCFEXR9v+wRBVEwsJ5Hg6vQN)
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    database: mysql
    show-sql: true
    hibernate:
      ddl-auto: create
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
  kafka:
    bootstrap-servers: kafka.kafka.svc.cluster.local:9092
    consumer:
      group-id: pay-service-group
      auto-offset-reset: earliest
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.value.delegate.class: org.apache.kafka.common.serialization.ByteArrayDeserializer
        security.protocol: SASL_PLAINTEXT
        sasl.mechanism: SCRAM-SHA-256
        sasl.jaas.config: org.apache.kafka.common.security.scram.ScramLoginModule required username="user1" password="mzdCmxMG42";
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    topic:
      transaction-status: transaction-status
  data:
    redis:
      host: redis-master.kafka.svc.cluster.local
      port: 6379
      password:
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

auth:
  service:
    url: http://auth-service.auth.svc:8080
payment:
  service:
    url: http://payment-service.payment.svc:8080